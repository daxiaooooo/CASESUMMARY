1. 总结
==========

花了三天的时间把公司一份53页的文档发布成网页版。潘说这是我用课堂知识解决实际工作的一个很好的案例。我其实心里是有点虚的，现学现卖也不过如此了。虽说之前在课堂上有接触过用rst写文档，然后用sphinx发布，再基于GitHub和readthedocs实时托管，这套know-how的过程查查网上也有很多人写过，但实际上去做也碰到了很多细小又致命的问题。说细小呢实际上当你一个个把问题都解决之后，发现真的是非常微不足道的；致命呢就在于解决不了就无法继续下去，就像程序会不停地报错。。。总而言之，在类似不断的debug的过程中，我写下一点点小小的总结。

总结分为三个部分的内容：

    * reStructuredtext语法

    * Sphinx安装配置及使用

    * Github代码托管与Readthedocs文档托管

1.1 reStructuredtext语法
==========================

rst的语法入门or详解在Google上有很多，有兴趣的童鞋完全可以自学入门，然后加以小小的实践。在错误中成长是最深刻的。

空格&空行
~~~~~~~~~

计算机小白们（例如我）最初往往无法明白为什么一个空格或者空行就让代码不停地报错报错，寸步难行。反正肉眼有时候也看不出来嘛！但是，计算机不是人，计算机是严格按照设定运行的，刚正不阿，眼里容不下一点沙子。rst虽然是轻量级的语言，但语法规定的空格和空行，也是万万不能忽略的。这次实践，文档转移期间和审校时出现的差错，绝大部分都是因为忽视或者误用和缺失了空格与空行。谨记谨记。

内联标记
~~~~~~~~~~

rst语法中有三种内联标记：*斜体* ， **强调**， ``等宽``，标记非常简单，如果有时候显示错误，试着在标记前or后加个 **空格** 试试看？

代码块
~~~~~~~~

多于一行的代码就不适合用内联标记了，这时候代码块就能派上用场，代码块算是一种特殊的文字块，在rst中可以用 ``::`` 来引出文字块，用 ``.. code-block:: c（or c++）`` 引出代码块，如下所示：

::

    这是一个文字块。


.. code-block:: c

    if
        ....

    这是一个c语言代码块。
        
.. attention:: 
    文字块或者代码块要独立于前后文，所以空行是必不可少滴！而且两个句号（英文）之后有空格，两个冒号（英文）之后有空格！

图片
~~~~~

引用图片的指令之一是 ``.. image:: path`` 指令编写和上条代码块指令书写要求是一致的；路径是相对路径，最好与rst文件处在同级文件夹下。当然还可以设置图片高度宽度等等等等，我尚未尝试。

列表
~~~~~~

列表项要缩进，各列表项之间要有空格。否则显示会不尽人意。

1.2 Sphinx安装配置及使用
=======================

Sphinx说明文档在Google上有大量博客写明，感兴趣的童鞋可以自行学习。

简单的命令行
~~~~~~~~~~~~~~

按照官方文档安装，先安装python，再使用命令行安装sphinx，再新建项目文件，完成各项设置。

如果按照步骤来，不紧张不慌忙，基本不会出错。反例是我，第一次安装时废了好大一番功夫，原因之一是害怕，出现一点错误我就更慌了。

这一次有进步！

项目文件
~~~~~~~~~~

在使用sphinx建立项目后，后续可能需要更改conf.py文件，更改主题之类的；写入新文件后需要在index.rst文件中写入更改文件，同样需要文件路径的引用等。

1.3 Github与Readthedocs托管
============================

这个步骤同样能在Google上找到大量资料。不赘述。

新建GitHub文件夹
~~~~~~~~~~~~~~~~~

由于文件交由Readthedocs托管，只需将除build文件夹下的内容导入GitHub。

之前没有尝试过新建文件夹操作，在GitHub网页版中操作是在仓库中选择新建文件，然后需要输入文件名，这时在文件名后加入“/”然后空格就生成了一个新文件夹，随后可以继续新建文件。

Readthedocs构建文档出错
~~~~~~~~~~~~~~~~~~~~~~~~~

使用Readthedocs托管之后，点击构建按钮后可以生成最新的HTML文档，如出错，一定要查看日志，日志会详细记录出错原因。这次困扰我的原因在于conf.py文件中有中文，需要在相应的所有中文标题前加上“u” （UTF8编码）。
